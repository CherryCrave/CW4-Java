package CW4;


/**
 * interface CARE  for 5COM2007 Cwk 4
 *
 * @author Mohamad & Bailey
 * @version 18/4/2024
 */
public interface CARE {

    /**
     * Returns a string of all details in the game
     */
    public String toString();

    /**
     * Returns a string with details of a specific champion
     *
     * @param champNo - unique identifier for the specified champion
     * @return a string of champion-specific details (including name, ID etc)
     */
    public String getChampionDetails(int champNo);

    /**
     * Returns a string with details of all champions
     *
     * @return a stringified list of all champions currently in the game (Including Reserve List)
     **/
    public String getAllChampions();

    /**
     * Returns a string of all champion details within the Vizier's currently selected
     * team.
     *
     * @return a stringified list of all champions currently within the Vizier's team
     */
    public String viewTeam();

    /**
     * Returns a string with all challenge details
     *
     * @param challengeId - Unique identifier for the specified challenge
     * @return a stringified list of challenge details, specific to the specified challenge
     **/
    public String getChallengeDetails(int challengeId);

    /**
     * Given the challenge ID, Returns true if champions meet
     * the requirements, returns false if the champions do not meet the requirements.
     *
     * @param challengeId - Unique identifier for the specified challenge
     * @return a boolean value (True if the challenge can be started,
     *                          False if the challenge can not be started)
     */
    public boolean canStartChallenge(int challengeId);

    /**
     * Returns an appropriate string related to the success or failure of the challenge
     * being completed.
     *
     * @param challengeId - The unique identifier for the specified challenge
     **/
    public String startChallenge(int challengeId);

    /**
     * Adds a champion to the 'team' ArrayList.
     *  --> Returning an appropriate string to the user as either confirmation of entry to the team
     *      OR denial of entry to the team, subject to entry conditions
     *
     * @param champNo - The unique identifier for the specified champion
     **/
    public String addChampionToTeam(int champNo);

    /**
     * Removes a champion from the 'team' ArrayList
     *  --> Returning an appropriate string to the user as either confirmation of removal from 
     *      the team OR denial of removal from the team
     * 
     * @param champNo - The unique identifier for the champion
     **/
    public String retireChampionFromTeam(int champNo);

    /**
     * Returns a string comprised of all challenges along with their criteria
     *
     * @return the name and Challenge Criteria
     **/
    public String listChallenges();

    /**
     * Returns the total amount of Gulden left in the treasury.
     *
     * @return an integer value representative of the currency in the treasury.
     **/
    public int viewTreasury();
}
